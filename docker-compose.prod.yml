version: '3.8'

services:
  web:
    restart: always
    environment:
      - FLASK_DEBUG=0
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/document_management
      - SECRET_KEY=${SECRET_KEY}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
    env_file:
      - .env.prod
    networks:
      - app-network
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      - db
    # В production мы не выставляем порт web наружу, а используем nginx как обратный прокси

  db:
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=document_management
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    networks:
      - app-network
    # В production мы не выставляем порт базы данных наружу
    
  nginx:
    image: nginx:1.23-alpine
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/app/static:ro
      - uploads_data:/app/uploads:ro
    ports:
      - "80:80"
      - "443:443"  # Для HTTPS
    depends_on:
      - web
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data_prod:
  uploads_data: