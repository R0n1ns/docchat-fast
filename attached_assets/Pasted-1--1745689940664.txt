1.	Описание и функции программ
Технологический стек проекта:
Компонент	Технология / Решение
Язык	Python 3.10+ (типизация, async/await)
API framework	FastAPI (+ Uvicorn / Gunicorn)
ORM	SQLAlchemy core + Alembic (миграции)
БД (реляционная)	PostgreSQL
Хранилище файлов	MinIO (S3 совместимое)
Криптография	PyCA Cryptography (AES 256 GCM)
Auth / SSO	FastAPI OAuth2PasswordBearer + JWT
Контейнеризация	Docker
Оркестрация	Kubernetes 
API Gateway	Kong / FastAPI
Логирование	EFK-stack (Elasticsearch + Fluentd + Kibana)
Метрики / Tracing	Prometheus + Grafana + Jaeger
Desktop-клиент (опц.)	Electron или PyQt для офлайн режима

Ключевые модули и алгоритмы:
1. Модуль аутентификации пользователей:
  - Форма ввода логина и пароля с использованием корпоративной почты.          
  - Одноразовый шестизначный код, отправляемый на почту для аутентификации.       
  - Интеграция с LDAP для централизованного управления учетными записями.

2. Модуль управления доступом:
  - Реализация трех уровней доступа: пользователь, руководитель и администратор.
  - Разграничение прав и привилегий на каждом уровне.
  - Возможность гибко настраивать роли и права пользователей через веб-интерфейс.

3. Модуль безопасности передачи данных:
  - Применение методов криптографического шифрования (AES-256) для защиты данных при передаче
  - Использование TLS для шифрования каналов связи.

4. Модуль проверки целостности документов:
  - Использование технологии блокчейн (или иного механизма контроля целостности) для проверки изменений и обеспечения неизменности данных.
  - Валидация подписей документов с использованием цифровых сертификатов.

5. Модуль управления журналом и статусом документов:
  - Возможность просмотра журнала действий и статусов документов с функциями сортировки и поиска.
  - Автоматическая генерация отчетов о деятельности пользователей.

6. Модуль аналитики и мониторинга:
  - Реализация инструментов для анализа активности пользователей и выявления аномалий.
  - Интеграция с системами мониторинга (например, Prometheus и Grafana) для отслеживания производительности системы.

2.	Стек технологий и микро сервисов

Описание сервисов
API Gateway (FastAPI)
•	Единая точка входа, роутинг на downstream сервисы.
•	Валидация JWT, rate limiting.
Auth & 2FA Service
•	Логин/пароль, выдача JWT (access + refresh).
•	TOTP коды (PyOTP) + отправка на корпоративную почту (SMTP).
User Service
•	CRUD пользователей, хранение ролей (user/manager/admin).
•	RBAC пространство через декораторы Depends в FastAPI.
Document Service
•	Загрузка/скачивание документов.
•	Хранение метаданных в PostgreSQL, сам файл — MinIO.
•	Подпись документов (PyCA).
•	Хэш каждой версии для проверки целостности (SHA 256).
Task Service
•	Celery + Redis: фоновые задачи (OCR с Tesseract, отправка уведомлений, генерация отчётов).
модули и алгоритмы
1.	Аутентификация и 2FA
o	JWT (PyJWT), хранение «refresh tokens» в БД.
o	TOTP (PyOTP): пользователю при входе присылается код на email.
2.	Управление доступом
o	Простая RBAC через роли в таблице users.role.
o	Декораторы-Depends в FastAPI для ограничения эндпойнтов.
3.	Шифрование и безопасность
o	AES 256 GCM шифрование файлов перед сохранением (ключи в ENV или Vault).
o	TLS на уровне nginx (в Docker Compose конфиге).
4.	Целостность документов
o	В таблице версий документов хранится prev_hash + current_hash.
o	Для верификации строим цепочку хэшей.
5.	Журнал и аудит
o	Каждый запрос к документам логируется (user_id, endpoint, timestamp).
o	Отчёты формируются по этим логам через SQL-запросы.
6.	Мониторинг и метрики
o	FastAPI middleware для Prometheus (prometheus fastapi instrumentator).
o	Базовые метрики: latency, error rate, task queue length.
